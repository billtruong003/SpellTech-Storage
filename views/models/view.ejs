<%- include('../partials/header') %>

    <div class="container">
        <div class="mb-4">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">Home</a></li>
                    <li class="breadcrumb-item"><a href="/models">Models</a></li>
                    <li class="breadcrumb-item active" aria-current="page">
                        <%= model.name %>
                    </li>
                </ol>
            </nav>
        </div>

        <div class="row">
            <div class="col-lg-8">
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-model-viewer" style="height: 500px; background-color: #f8f9fa;">
                        <model-viewer id="modelViewer" src="/<%= model.file_path %>" alt="<%= model.name %>"
                            camera-controls <%=model.autoplay ? 'autoplay' : '' %>
                            <%= model.animation_name ? `animation-name="${model.animation_name}" ` : '' %>
                                camera-orbit="<%= model.camera_orbit || '0deg 75deg 2m' %>"
                                    camera-target="<%= model.camera_target || '0m 0m 0m' %>"
                                        field-of-view="<%= model.field_of_view || '45deg' %>"
                                            exposure="<%= model.exposure || '1' %>"
                                                shadow-intensity="<%= model.shadow_intensity || '0.7' %>"
                                                    shadow-softness="<%= model.shadow_softness || '1' %>"
                                                        <%= model.environment_image ?
                                                            `environment-image="${model.environment_image}" ` : '' %>
                                                            <%= model.skybox_image ?
                                                                `skybox-image="${model.skybox_image}" ` : '' %>
                                                                ar ar-modes="webxr scene-viewer quick-look"
                                                                style="width: 100%; height: 100%;">

                                                                <!-- Hotspots -->
                                                                <% if (hotspots && hotspots.length> 0) { %>
                                                                    <% hotspots.forEach(hotspot=> { %>
                                                                        <button slot="hotspot-<%= hotspot.id %>"
                                                                            class="hotspot"
                                                                            data-position="<%= hotspot.position %>"
                                                                            <%=hotspot.normal ?
                                                                            `data-normal="${hotspot.normal}" ` : '' %>
                                                                            <%= hotspot.surface ?
                                                                                `data-surface="${hotspot.surface}" `
                                                                                : '' %>
                                                                                data-visibility-attribute="visible"
                                                                                >
                                                                                <div class="hotspot-annotation">
                                                                                    <%= hotspot.content %>
                                                                                </div>
                                                                        </button>
                                                                        <% }); %>
                                                                            <% } %>

                                                                                <!-- AR Button -->
                                                                                <button slot="ar-button"
                                                                                    class="ar-button">
                                                                                    <i class="fas fa-cube me-1"></i>
                                                                                    View in AR
                                                                                </button>

                                                                                <!-- Loading Poster -->
                                                                                <div slot="poster" class="poster">
                                                                                    <div class="spinner-border text-primary"
                                                                                        role="status">
                                                                                        <span
                                                                                            class="visually-hidden">Loading...</span>
                                                                                    </div>
                                                                                    <div class="mt-2">Loading 3D
                                                                                        Model...</div>
                                                                                </div>
                        </model-viewer>
                    </div>
                </div>

                <% if (isOwner) { %>
                    <div class="d-flex justify-content-between mb-4">
                        <a href="/models/<%= model.id %>/edit" class="btn btn-primary">
                            <i class="fas fa-edit me-2"></i>Edit Model
                        </a>
                        <div>
                            <button type="button" class="btn btn-outline-primary me-2" id="embedBtn">
                                <i class="fas fa-code me-2"></i>Embed
                            </button>
                            <button type="button" class="btn btn-outline-danger"
                                onclick="confirmDelete('<%= model.id %>', '<%= model.name %>')">
                                <i class="fas fa-trash me-2"></i>Delete
                            </button>
                        </div>
                    </div>
                    <% } %>

                        <% if (isOwner && hotspots && hotspots.length> 0) { %>
                            <div class="card border-0 shadow-sm mb-4">
                                <div class="card-header bg-white d-flex justify-content-between align-items-center">
                                    <h5 class="mb-0"><i class="fas fa-map-marker-alt me-2"></i>Hotspots</h5>
                                    <button type="button" class="btn btn-sm btn-primary" id="addHotspotBtn">
                                        <i class="fas fa-plus me-1"></i>Add Hotspot
                                    </button>
                                </div>
                                <div class="card-body p-0">
                                    <div class="table-responsive">
                                        <table class="table table-hover mb-0">
                                            <thead class="table-light">
                                                <tr>
                                                    <th>Name</th>
                                                    <th>Position</th>
                                                    <th>Content</th>
                                                    <th>Actions</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <% hotspots.forEach(hotspot=> { %>
                                                    <tr>
                                                        <td>
                                                            <%= hotspot.name %>
                                                        </td>
                                                        <td><small class="text-muted">
                                                                <%= hotspot.position %>
                                                            </small></td>
                                                        <td>
                                                            <%= hotspot.content.length> 30 ?
                                                                hotspot.content.substring(0, 30) + '...' :
                                                                hotspot.content %>
                                                        </td>
                                                        <td>
                                                            <div class="btn-group btn-group-sm">
                                                                <button type="button" class="btn btn-outline-primary"
                                                                    onclick="editHotspot(<%= JSON.stringify(hotspot) %>)">
                                                                    <i class="fas fa-edit"></i>
                                                                </button>
                                                                <button type="button" class="btn btn-outline-danger"
                                                                    onclick="deleteHotspot(<%= hotspot.id %>)">
                                                                    <i class="fas fa-trash"></i>
                                                                </button>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <% }); %>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <% } else if (isOwner) { %>
                                <div class="card border-0 shadow-sm mb-4">
                                    <div class="card-body text-center p-4">
                                        <i class="fas fa-map-marker-alt fa-3x text-muted mb-3"></i>
                                        <h5>No Hotspots Yet</h5>
                                        <p class="text-muted">Add hotspots to highlight specific parts of your model.
                                        </p>
                                        <button type="button" class="btn btn-primary" id="addHotspotBtn">
                                            <i class="fas fa-plus me-2"></i>Add Your First Hotspot
                                        </button>
                                    </div>
                                </div>
                                <% } %>
            </div>

            <div class="col-lg-4">
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-body">
                        <h3 class="card-title">
                            <%= model.name %>
                        </h3>
                        <p class="text-muted">
                            <i class="fas fa-user me-1"></i>
                            <%= model.owner %> |
                                <i class="fas fa-calendar me-1"></i>
                                <%= new Date(model.created_at).toLocaleDateString() %>
                        </p>

                        <div class="mb-3">
                            <% if (model.is_public) { %>
                                <span class="badge bg-success">Public</span>
                                <% } else { %>
                                    <span class="badge bg-secondary">Private</span>
                                    <% } %>
                                        <span class="badge bg-primary ms-1">
                                            <%= model.file_type.toUpperCase() %>
                                        </span>
                                        <span class="badge bg-info text-dark ms-1">
                                            <%= Math.round(model.file_size / 1024) %> KB
                                        </span>
                        </div>

                        <hr>

                        <h5>Description</h5>
                        <p>
                            <%= model.description || 'No description provided.' %>
                        </p>

                        <hr>

                        <h5>Camera Controls</h5>
                        <div class="mb-3">
                            <p class="mb-1 text-muted small">Left click + drag: Rotate</p>
                            <p class="mb-1 text-muted small">Right click + drag: Pan</p>
                            <p class="mb-1 text-muted small">Scroll: Zoom</p>
                            <p class="mb-1 text-muted small">Double click: Reset camera</p>
                        </div>

                        <hr>

                        <h5>Quick Settings</h5>
                        <div class="mb-3">
                            <label for="quickExposure" class="form-label">Exposure</label>
                            <input type="range" class="form-range" id="quickExposure" min="0" max="2" step="0.1"
                                value="<%= model.exposure || '1' %>">
                        </div>

                        <div class="mb-3">
                            <label for="quickShadow" class="form-label">Shadow Intensity</label>
                            <input type="range" class="form-range" id="quickShadow" min="0" max="1" step="0.1"
                                value="<%= model.shadow_intensity || '0.7' %>">
                        </div>

                        <% if (model.animation_name) { %>
                            <div class="mb-3">
                                <button type="button" class="btn btn-outline-primary btn-sm" id="playAnimationBtn">
                                    <i class="fas fa-play me-1"></i>Play Animation
                                </button>
                                <button type="button" class="btn btn-outline-secondary btn-sm ms-2"
                                    id="pauseAnimationBtn">
                                    <i class="fas fa-pause me-1"></i>Pause
                                </button>
                            </div>
                            <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Embed Code Modal -->
    <div class="modal fade" id="embedModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Embed Code</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Copy and paste this code to embed the 3D model on your website:</p>
                    <div class="mb-3">
                        <textarea class="form-control font-monospace" id="embedCode" rows="8" readonly></textarea>
                    </div>
                    <div class="d-grid">
                        <button type="button" class="btn btn-primary" id="copyEmbedBtn">
                            <i class="fas fa-copy me-2"></i>Copy to Clipboard
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Hotspot Modal -->
    <div class="modal fade" id="hotspotModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="hotspotModalTitle">Add Hotspot</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="hotspotForm">
                        <input type="hidden" id="hotspotId">
                        <input type="hidden" id="hotspotPosition">
                        <input type="hidden" id="hotspotNormal">
                        <input type="hidden" id="hotspotSurface">

                        <div class="mb-3">
                            <label for="hotspotName" class="form-label">Hotspot Name</label>
                            <input type="text" class="form-control" id="hotspotName" required>
                        </div>

                        <div class="mb-3">
                            <label for="hotspotContent" class="form-label">Content</label>
                            <textarea class="form-control" id="hotspotContent" rows="3" required></textarea>
                            <div class="form-text">Text that will appear when hovering over the hotspot.</div>
                        </div>

                        <div class="mb-3" id="positionPickerInfo">
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle me-2"></i>Click on the model to place the hotspot.
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="saveHotspotBtn">Save Hotspot</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete <span id="modelName" class="fw-bold"></span>?</p>
                    <p class="text-danger">This action cannot be undone.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Hotspot Confirmation Modal -->
    <div class="modal fade" id="deleteHotspotModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Delete Hotspot</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this hotspot?</p>
                    <p class="text-danger">This action cannot be undone.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteHotspotBtn">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <style>
        model-viewer {
            --poster-color: transparent;
        }

        .hotspot {
            display: block;
            width: 20px;
            height: 20px;
            border-radius: 10px;
            border: none;
            background-color: #4285f4;
            box-sizing: border-box;
            pointer-events: all;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
        }

        .hotspot[data-visible="false"] {
            opacity: 0;
            pointer-events: none;
        }

        .hotspot:focus {
            outline: none;
        }

        .hotspot-annotation {
            position: absolute;
            transform: translate(10px, 10px);
            background-color: #fff;
            border-radius: 4px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
            color: rgba(0, 0, 0, 0.8);
            display: none;
            font-family: Roboto Regular, Helvetica Neue, sans-serif;
            font-size: 14px;
            font-weight: 400;
            left: calc(100% + 5px);
            max-width: 250px;
            min-width: 150px;
            padding: 10px 15px;
            top: 50%;
            width: max-content;
            z-index: 1;
        }

        .hotspot:hover .hotspot-annotation {
            display: block;
        }

        .ar-button {
            background-color: white;
            border-radius: 4px;
            border: none;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
            color: #4285f4;
            display: block;
            font-family: Roboto Regular, Helvetica Neue, sans-serif;
            font-size: 14px;
            font-weight: 500;
            max-width: 128px;
            padding: 8px 16px;
            position: absolute;
            right: 16px;
            top: 16px;
            transition: background-color 0.25s ease;
        }

        .ar-button:hover {
            background-color: #f8f9fa;
        }

        .poster {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100%;
            width: 100%;
            position: absolute;
            background-color: #f8f9fa;
            z-index: 1;
        }
    </style>

    <script>
        // Quick settings
        document.getElementById('quickExposure').addEventListener('input', function () {
            const modelViewer = document.getElementById('modelViewer');
            modelViewer.exposure = this.value;
        });

        document.getElementById('quickShadow').addEventListener('input', function () {
            const modelViewer = document.getElementById('modelViewer');
            modelViewer.shadowIntensity = this.value;
        });
  
  <% if (model.animation_name) { %>
            // Animation controls
            document.getElementById('playAnimationBtn').addEventListener('click', function () {
                const modelViewer = document.getElementById('modelViewer');
                modelViewer.play();
            });

            document.getElementById('pauseAnimationBtn').addEventListener('click', function () {
                const modelViewer = document.getElementById('modelViewer');
                modelViewer.pause();
            });
  <% } %>
  
  <% if (isOwner) { %>
            // Embed code
            document.getElementById('embedBtn').addEventListener('click', function () {
                fetch('/models/<%= model.id %>/embed')
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('embedCode').value = data.embedCode;
                        const modal = new bootstrap.Modal(document.getElementById('embedModal'));
                        modal.show();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Error generating embed code');
                    });
            });

            // Copy embed code
            document.getElementById('copyEmbedBtn').addEventListener('click', function () {
                const embedCode = document.getElementById('embedCode');
                embedCode.select();
                document.execCommand('copy');
                this.innerHTML = '<i class="fas fa-check me-2"></i>Copied!';
                setTimeout(() => {
                    this.innerHTML = '<i class="fas fa-copy me-2"></i>Copy to Clipboard';
                }, 2000);
            });

            // Hotspot management
            let hotspotPickerActive = false;
            let currentHotspotId = null;

            document.getElementById('addHotspotBtn').addEventListener('click', function () {
                document.getElementById('hotspotModalTitle').textContent = 'Add Hotspot';
                document.getElementById('hotspotForm').reset();
                document.getElementById('hotspotId').value = '';
                document.getElementById('positionPickerInfo').style.display = 'block';

                const modal = new bootstrap.Modal(document.getElementById('hotspotModal'));
                modal.show();

                hotspotPickerActive = true;
            });

            document.getElementById('modelViewer').addEventListener('click', function (event) {
                if (!hotspotPickerActive) return;

                const modelViewer = document.getElementById('modelViewer');
                const rect = modelViewer.getBoundingClientRect();
                const x = event.clientX - rect.left;
                const y = event.clientY - rect.top;

                const hit = modelViewer.positionAndNormalFromPoint(x, y);
                if (hit) {
                    const { position, normal } = hit;

                    document.getElementById('hotspotPosition').value = `${position.x} ${position.y} ${position.z}`;
                    document.getElementById('hotspotNormal').value = `${normal.x} ${normal.y} ${normal.z}`;

                    document.getElementById('positionPickerInfo').innerHTML = `
          <div class="alert alert-success">
            <i class="fas fa-check-circle me-2"></i>Hotspot position selected.
          </div>
        `;

                    hotspotPickerActive = false;
                }
            });

            document.getElementById('saveHotspotBtn').addEventListener('click', function () {
                const name = document.getElementById('hotspotName').value;
                const content = document.getElementById('hotspotContent').value;
                const position = document.getElementById('hotspotPosition').value;
                const normal = document.getElementById('hotspotNormal').value;
                const surface = document.getElementById('hotspotSurface').value;
                const hotspotId = document.getElementById('hotspotId').value;

                if (!name || !content || !position) {
                    alert('Please fill all required fields and select a position on the model');
                    return;
                }

                const hotspotData = {
                    name,
                    content,
                    position,
                    normal,
                    surface
                };

                let url = '/models/<%= model.id %>/hotspots';
                let method = 'POST';

                if (hotspotId) {
                    url = `/models/<%= model.id %>/hotspots/${hotspotId}`;
                    method = 'PUT';
                }

                fetch(url, {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(hotspotData)
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert('Error saving hotspot: ' + (data.error || 'Unknown error'));
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Error saving hotspot');
                    });
            });

            function editHotspot(hotspot) {
                document.getElementById('hotspotModalTitle').textContent = 'Edit Hotspot';
                document.getElementById('hotspotId').value = hotspot.id;
                document.getElementById('hotspotName').value = hotspot.name;
                document.getElementById('hotspotContent').value = hotspot.content;
                document.getElementById('hotspotPosition').value = hotspot.position;
                document.getElementById('hotspotNormal').value = hotspot.normal || '';
                document.getElementById('hotspotSurface').value = hotspot.surface || '';
                document.getElementById('positionPickerInfo').style.display = 'none';

                const modal = new bootstrap.Modal(document.getElementById('hotspotModal'));
                modal.show();

                hotspotPickerActive = false;
            }

            function deleteHotspot(hotspotId) {
                currentHotspotId = hotspotId;
                const modal = new bootstrap.Modal(document.getElementById('deleteHotspotModal'));
                modal.show();
            }

            document.getElementById('confirmDeleteHotspotBtn').addEventListener('click', function () {
                if (!currentHotspotId) return;

                fetch(`/models/<%= model.id %>/hotspots/${currentHotspotId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert('Error deleting hotspot: ' + (data.error || 'Unknown error'));
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Error deleting hotspot');
                    });
            });
  <% } %>

            // Delete model
            function confirmDelete(modelId, modelName) {
                document.getElementById('modelName').textContent = modelName;
                const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
                modal.show();

                document.getElementById('confirmDeleteBtn').onclick = function () {
                    deleteModel(modelId);
                };
            }

        function deleteModel(modelId) {
            fetch(`/models/${modelId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.href = '/dashboard';
                    } else {
                        alert('Error deleting model: ' + (data.error || 'Unknown error'));
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error deleting model');
                });
        }
    </script>

    <%- include('../partials/footer') %>